name: Generate Snake

# Define when the action will run.
on:
  schedule:
    # Runs every 12 hours
    - cron: "0 */12 * * *"

  # This command allows us to run the Action manually from the Actions tab.
  workflow_dispatch:

  # Also run on every push to the main branch
  push:
    branches:
      - main # Cambia 'main' si usas otra rama principal

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Clone the repository
      - name: Checkout repository
        uses: actions/checkout@v4 # Actualizamos a la versión más reciente

      # Step 2: Clean up the repository before proceeding
      - name: Clean git status
        run: |
          git fetch origin
          git reset --hard origin/main  # Cambia 'main' si usas otra rama principal
          git clean -fd

      # Step 3: Generate the snake files and save them in the 'dist/' folder
      - name: Generate the snake files in './dist/'
        uses: Platane/snk@v3
        id: snake-gif
        with:
          github_user_name: ${{ github.repository_owner }}
          outputs: |
            dist/github-contribution-grid-snake.svg
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark
            dist/github-contribution-grid-snake.gif?color_snake=orange&color_dots=#bfd6f6,#8dbdff,#64a1f4,#4b91f1,#3c7dd9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 4: Push the generated files to the output branch
      - name: Push new files to the output branch
        uses: crazy-max/ghaction-github-pages@v4 # Actualizamos a la versión más reciente
        with:
          target_branch: output # Asegúrate de que esta rama exista
          build_dir: dist
          commit_message: Update snake animations
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
